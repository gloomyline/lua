-- @Author: Alan
-- @Date:   2016-11-14 17:27:15
-- @Last Modified by:   Alan
-- @Last Modified time: 2016-11-14 21:08:47


-- 可以用字符分类(character class)创建更多有用的模式，
-- 字符分类就是模式中的一项，可以与一个特定集合中的任意字符相匹配
--[[
%a - 字母
%c - 控制字符
%d - 数字
%l - 小写字母
%p - 标点符号
%s - 空白字符
%u - 大写字母
%w - 字母和数字字符
%x - 十六进制数字
%z - 内部表示为0的字符

这些分类的大写形式表示它们的补集，例如"%A"表示所有非字母字符
--]]
print (string.gsub('hello, up-down!', '%A', '.'))

--[[
-->hello..up.down. 4
'4'不是结果字符串的一部分，而是gsub的第二个结果，即替换的次数
--]]
print (string.rep('*', 10))

--[[
在模式中还有一些字符被称为'魔法字符'，包括：'( ) . % + - * ? [ ] ^ $'

字符'%'作为魔法字符的转义符，当不确定某个字符是否需要转义时，应该前置一个转义符。

在一对方括号内将不同的字符分类或单个字符组合起来，即可创建字符分类
这种新的字符分类叫做'字符集(char-set)'

通过修饰符来描述模式中的重复部分和可选部分
+		重复1次或多次
*		重复0次或多次
-		尽可能少地重复0次或多次
？		可选部分(出现0或1次)
--]]

